{"version":3,"file":"static/webpack/static/development/pages/_app.js.a831e44124833cdf6359.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app';\nimport { ApolloProvider } from 'react-apollo';\nimport Page from '../components/Page';\nimport withData from '../lib/withData'; // Apollo Client Wrapper\n\nclass MyApp extends App {\n  // @desc\n  // Nextjs lifecycle method that runs before render\n  // works both on the server-side and client side.\n  // Its able to read the browsers url bar from something called context.\n  // Context also contains other useful things like access to cookies.\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, apollo, pageProps } = this.props;\n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n          <Page>\n            <Component {...pageProps} />\n          </Page>\n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withData(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;AAzBA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAbA;AACA;AA4BA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}